name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # Triggers on version tags like v1.0.0, v1.2.3, etc.

permissions:
  contents: write  # Required for creating releases and uploading assets

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build Linux packages
      run: npm run build-linux
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-builds
        path: |
          dist/*.AppImage
          dist/*.deb
        retention-days: 1

  build-windows:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Install Wine for Windows builds
      run: |
        sudo apt update
        sudo apt install -y wine64

    - name: Build Windows packages
      run: npm run build-windows
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-builds
        path: |
          dist/*.exe
          dist/*.msi
        retention-days: 1

  build-macos:
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build macOS packages
      run: npm run build-mac
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload macOS artifacts
      uses: actions/upload-artifact@v4
      with:
        name: macos-builds
        path: |
          dist/*.dmg
          dist/*.zip
        retention-days: 1

  create-release:
    needs: [build-linux, build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./dist-artifacts

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Perfect Pomodoro Timer ${{ github.ref_name }}
        body: |
          ## üçÖ Perfect Pomodoro Timer ${{ github.ref_name }}

          ### Downloads

          **Linux:**
          - **AppImage** (recommended): Universal Linux package, just download and run
          - **Debian/Ubuntu**: `.deb` package for apt-based systems

          **Windows:**
          - **Installer**: `.exe` installer with uninstall support
          - **Portable**: Standalone executable

          **macOS:**
          - **DMG**: Disk image for easy installation
          - **ZIP**: Archive with app bundle

          ### What's New
          - See [CHANGELOG.md](CHANGELOG.md) for detailed changes

          ### Installation

          **Linux AppImage:**
          ```bash
          chmod +x Perfect-Pomodoro-Timer-*.AppImage
          ./Perfect-Pomodoro-Timer-*.AppImage
          ```

          **All platforms:** See [README.md](README.md) for detailed installation instructions.

          ---

          Built automatically with GitHub Actions ‚ö°
        draft: false
        prerelease: false

    - name: Upload Linux AppImage
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-artifacts/linux-builds/Perfect Pomodoro Timer-*.AppImage
        asset_name: Perfect-Pomodoro-Timer-${{ github.ref_name }}.AppImage
        asset_content_type: application/octet-stream

    - name: Upload Linux .deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-artifacts/linux-builds/*.deb
        asset_name: perfect-pomodoro-timer-${{ github.ref_name }}.deb
        asset_content_type: application/vnd.debian.binary-package

    - name: Upload Windows Installer
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-artifacts/windows-builds/*Setup*.exe
        asset_name: Perfect-Pomodoro-Timer-Setup-${{ github.ref_name }}.exe
        asset_content_type: application/octet-stream

    - name: Upload macOS DMG
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist-artifacts/macos-builds/*.dmg
        asset_name: Perfect-Pomodoro-Timer-${{ github.ref_name }}.dmg
        asset_content_type: application/octet-stream